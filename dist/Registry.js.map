{"version":3,"sources":["Registry.ts"],"names":["ObjectRegistry","ObjectRegistry.constructor","ObjectRegistry.register","ObjectRegistry.invoke","ObjectRegistry.get","ClassRegistry","ClassRegistry.constructor","ClassRegistry.register","ClassRegistry.invoke","ClassRegistry.get","KeyRegistry","KeyRegistry.constructor","KeyRegistry.register","KeyRegistry.invoke","KeyRegistry.key","KeyRegistry.get"],"mappings":"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","file":"Registry.js","sourcesContent":["export module api {\n\n    export interface IRPCRegistry {\n        register(name: string, classname: any);\n        invoke(name: string, method: string, params?: any): any;\n        get(name: string): any;\n    }\n}\n\nexport class ObjectRegistry implements api.IRPCRegistry {\n    private _objects: { [name: string]: Object } = {};\n    constructor() {}\n\n    register(name: string, className: any) {\n        this._objects[name] = new className();\n    }\n\n    invoke(name: string, method: string, params?: any): any {\n        try {\n            var instance = this._objects[name];\n            return instance[method](params);\n        } catch (err) {\n            var msg: string = 'ObjectRegistry invoke fail on ' + name + '.' + method;\n            msg += (params) ? '(' + JSON.stringify(params) + ')' : '()';\n            throw (msg);\n        }\n    }\n\n    get(name: string): any {\n        return this._objects[name];\n    }\n}\n\nexport class ClassRegistry implements api.IRPCRegistry {\n    private _classNames: { [name: string]: any } = {};\n    constructor() {}\n\n    register(name: string, className: any) {\n        this._classNames[name] = className;\n    }\n\n    invoke(name: string, method: string, params?: any): any {\n        try {\n            var instance = new this._classNames[name];\n            return instance[method](params);\n        } catch (err) {\n            var msg: string = 'ClassRegistry invoke fail on ' + name + '.' + method;\n            msg += (params) ? '(' + JSON.stringify(params) + ')' : '()';\n            throw (msg);\n        }\n    }\n\n    get(name: string): any {\n        return this._classNames[name];\n    }\n}\n\nexport class KeyRegistry implements api.IRPCRegistry {\n    private _key: string;\n    private _classRegistry: ClassRegistry;\n    private _objects: { [name: string]: Object } = {};\n    constructor(key: string, registry: ClassRegistry) {\n        this._key = key;\n        this._classRegistry = registry;\n    }\n\n    register(name: string, className: any) {\n        throw 'Register method should not be use on KeyRegistry';\n    }\n\n    invoke(name: string, method: string, params?: any): any {\n        try {\n            var instance = this._objects[this._key + ':' + name];\n            if (!instance) {\n                var className = this._classRegistry.get(name);\n                this._objects[this._key + ':' + name] = new className();\n                instance = this._objects[this._key + ':' + name];\n            }\n            return instance[method](params);\n        } catch (err) {\n            var msg: string = 'KeyRegistry ' + this._key + ' invoke fail on ' + name + '.' + method;\n            msg += (params) ? '(' + JSON.stringify(params) + ')' : '()';\n            throw (msg);\n        }\n    }\n\n    key() {\n        return this._key;\n    }\n\n    get(name: string): any {\n        return this._classRegistry.get(name);\n    }\n}"],"sourceRoot":"/source/"}