{"version":3,"sources":["UUIDGenerator.ts"],"names":["UUIDGenerator","UUIDGenerator.constructor","UUIDGenerator.generateUUID"],"mappings":"AAAA,IAAa,aAAa;IAA1BA,SAAaA,aAAaA;IAU1BC,CAACA;IARiBD,0BAAYA,GAA1BA;QACIE,IAAIA,CAACA,GAAGA,IAAIA,IAAIA,EAAEA,CAACA,OAAOA,EAAEA,CAACA;QAC7BA,MAAMA,CAACA,sCAAsCA,CAACA,OAAOA,CAACA,OAAOA,EAAEA,UAAUA,CAACA;YACtE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC1C,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YACvB,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACzD,CAAC,CAACA,CAACA;IACPA,CAACA;IACLF,oBAACA;AAADA,CAVA,AAUCA,IAAA;AAVY,qBAAa,GAAb,aAUZ,CAAA","file":"UUIDGenerator.js","sourcesContent":["export class UUIDGenerator {\n\n    public static generateUUID(): string {\n        var d = new Date().getTime();\n        return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    }\n}\n"],"sourceRoot":"/source/"}