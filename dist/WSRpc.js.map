{"version":3,"sources":["WSRpc.ts"],"names":["UUIDGenerator","UUIDGenerator.constructor","UUIDGenerator.generateUUID","WSRpcClientCallHandler","WSRpcClientCallHandler.constructor","WSRpcClientCallHandler.singleton","WSRpcClientCallHandler.stateless","WSRpcClientCallHandler.getRegistry","WSRpcClientCallHandler.execute","WSRpcClientCallHandler.rpcInvoke","EventBus","EventBus.constructor","EventBus.getSharedEventBus","EventBus.on","EventBus.fire","EventBus.remove","RpcMessage","RpcMessage.constructor","RpcMessage.isError","RpcMessage.isRequest","RpcMessage.isResponse","RpcMessage.getCode","RpcMessage.getErrorMessage","RpcMessage.getResult","RpcMessage.getParams","RpcMessage.isBroadcast","RpcMessage.getMethod","RpcMessage.getInstance","RpcMessage.getAction","RpcMessage.getId","ObjectRegistry","ObjectRegistry.constructor","ObjectRegistry.register","ObjectRegistry.invoke","ObjectRegistry.get","ClassRegistry","ClassRegistry.constructor","ClassRegistry.register","ClassRegistry.invoke","ClassRegistry.get","KeyRegistry","KeyRegistry.constructor","KeyRegistry.register","KeyRegistry.invoke","KeyRegistry.key","KeyRegistry.get","RPC","RPC.constructor","RPC.Response","RPC.Request","RPC.Error","WSRpcContext","WSRpcContext.constructor","WSRpcLogging","WSRpcLogging.constructor","WSRpcLogging.log","WSRpcInvoke","WSRpcInvoke.constructor","WSRpcInvoke.method","WSRpcMethod","WSRpcMethod.constructor","WSRpcMethod.withParams","WSRpcMethodRequest","WSRpcMethodRequest.constructor","WSRpcMethodRequest.broadcast","WSRpcMethodRequest.now","WSRpcMethodRequest.then","WSRpc","WSRpc.constructor","WSRpc.connect","WSRpc.ready","WSRpc.close","WSRpc.onOpen","WSRpc.onClose","WSRpc.onError","WSRpc.onConnect","WSRpc.call","WSRpc.on","WSRpc.doRequest","WSRpc.onResponse","WSRpc.singleton","WSRpc.stateless"],"mappings":"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,CAACA,YAAYA,GAAGA,IAAIA,CAACA;gBACzBA,IAAIA,CAACA,YAAYA,GAAGA,CAACA,CAACA,CAACA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA;gBACpCA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,KAAKA,YAAYA,CAACA,CAACA,CAACA;oBACtCA,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA;oBACvBA,IAAIA,CAACA,cAAcA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC7CA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACJA,IAAIA,CAACA,cAAcA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC/BA,CAACA;YACLA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACJA,IAAIA,CAACA,cAAcA,GAAGA,IAAIA,CAACA;gBAC3BA,IAAIA,CAACA,YAAYA,GAAGA,IAAIA,CAACA;gBACzBA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,KAAKA,YAAYA,CAACA,CAACA,CAACA;oBACtCA,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA;oBACvBA,IAAIA,CAACA,YAAYA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC3CA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACJA,IAAIA,CAACA,YAAYA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,CAACA;YACLA,CAACA;QACLA,CAACA;QACDA,IAAIA,CAACA,CAACA;YACFA,IAAIA,CAACA,OAAOA,GAAGA,GAAGA,CAACA,MAAMA,CAACA;QAC9BA,CAACA;IACLA,CAACA;IAEDD,4BAAOA,GAAPA;QACIE,MAAMA,CAACA,CAAC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","file":"WSRpc.js","sourcesContent":["export var DEBUG: boolean = false;\n\nexport module api {\n\n    export interface IRPCRegistry {\n        register(name: string, classname: any);\n        invoke(name: string, method: string, params?: any): any;\n        get(name: string): any;\n    }\n\n    export interface IWSRpc {\n        connect();\n        close(): boolean;\n\n        onOpen(callback: (event: Event) => void);\n        onClose(callback: (event: CloseEvent) => void);\n        onError(callback: (event: ErrorEvent) => void);\n        onConnect(callback: () => void);\n\n        doRequest(action: string, data: JSON, ...callbacks: ((data: JSON) => void)[]);\n        onResponse(action: string, ...callbacks: ((data: JSON) => void)[]);\n\n        call(about?: string): IWSRpcInvoke;\n        on(about: string, ...callbacks: ((data: JSON) => void)[]);\n    }\n\n    export interface IWSRpcInvoke {\n        method(method: string): IWSRpcMethod;\n    }\n\n    export interface IWSRpcMethod {\n        withParams(params?: JSON): IWSRpcMethodRequest;\n    }\n\n    export interface IWSRpcMethodRequest {\n        broadcast(): IWSRpcMethodRequest;\n        now();\n        then(...callbacks: ((data: JSON) => void)[]);\n    }\n}\n\nexport class UUIDGenerator {\n\n    public static generateUUID(): string {\n        var d = new Date().getTime();\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    }\n}\n\nexport class WSRpcClientCallHandler {\n\n    private _singleton: ObjectRegistry;\n    private _stateless: ClassRegistry;\n    private _names: { [name: string]: Object };\n\n    constructor() {\n        this._names = {};\n        this._singleton = new ObjectRegistry();\n        this._stateless = new ClassRegistry();\n    }\n\n    public singleton(instanceName: string, classNames: any) {\n        this._names[instanceName] = this._singleton;\n        this._singleton.register(instanceName, classNames);\n    }\n\n    public stateless(instanceName: string, classNames: any) {\n        this._names[instanceName] = this._stateless;\n        this._stateless.register(instanceName, classNames);\n    }\n\n    public getRegistry(instanceName: string): api.IRPCRegistry {\n        if (this._names[instanceName] === this._singleton) {\n            return this._singleton;\n        }\n        else if (this._names[instanceName] === this._stateless) {\n            return this._stateless;\n        }\n        return null;\n    }\n\n    public execute(client: WebSocket, rpc: RpcMessage) {\n        this.rpcInvoke(\n            client,\n            rpc.getInstance(),\n            rpc.getMethod(),\n            rpc.getParams(),\n            rpc.getId()\n        );\n    }\n\n    public rpcInvoke(client: WebSocket, instance: string, method: string, params: JSON, id: string) {\n        if (this._names[instance]) {\n            var registry: api.IRPCRegistry = null;\n            if (this._names[instance] === this._singleton) {\n                WSRpcLogging.log(':registry:_singleton');\n                registry = this._singleton;\n            }\n            else if (this._names[instance] === this._stateless) {\n                WSRpcLogging.log(':registry:_stateless');\n                registry = this._stateless;\n            }\n            WSRpcLogging.log(':invoke:'+instance+'.'+method+'('+params+') : ' +id);\n            var result: JSON = registry.invoke(instance, method, params);\n            WSRpcLogging.log(':response:'+JSON.stringify(RPC.Response(id, result)));\n            client.send(JSON.stringify(RPC.Response(id, result)));\n        }\n        else {\n            client.send(\n                JSON.stringify(\n                    RPC.Error(id, RPC.METHOD_NOT_FOUND, 'RPC client instance named ' + instance + ' not found.')\n                )\n            );\n        }\n    }\n}\n\nexport class EventBus {\n\n    private static _instance: EventBus = null;\n\n    private listeners: { [eventId: string]: [(data: JSON)=> void] ; } = {};\n\n    constructor() {\n        if (EventBus._instance) {\n            throw new Error('Instantiate EventBus error.');\n        }\n        EventBus._instance = this;\n    }\n\n    public static getSharedEventBus(): EventBus {\n        if (EventBus._instance === null) {\n            EventBus._instance = new EventBus();\n        }\n        return EventBus._instance;\n    }\n\n    on(eventId:string, callback:(data: JSON) => void) {\n        if (!this.listeners[eventId]) {\n            this.listeners[eventId] = [callback];\n            return;\n        }\n        //this.listeners[eventId][this.listeners[eventId].length] = callback;\n        this.listeners[eventId].push(callback);\n    }\n\n    fire(eventId:string, data?:JSON) {\n        for (var x in this.listeners[eventId]) {\n            var method = this.listeners[eventId][x];\n            if (method) {\n                setTimeout(method(data));\n            }\n        }\n    }\n\n    remove(eventId:string, callback:(data: JSON) => void) {\n        if (this.listeners[eventId]) {\n            var len: number = this.listeners[eventId].length;\n            var newcallbacks: [(data: JSON)=> void] = [(data: JSON): void=> {}];\n            for (var x = 0; x < len; x++) {\n                var _callback: (data: JSON)=> void = this.listeners[eventId][x];\n                if (_callback === callback) {\n                } else {\n                    newcallbacks.push(_callback);\n                }\n            }\n            this.listeners[eventId] = newcallbacks;\n        }\n    }\n}\n\nexport class RpcMessage {\n    _code: number;\n    _message: string;\n    _id: string;\n    _broadcast: boolean;\n    _namedMethod: string;\n    _namedInstance: string;\n    _namedAction: string;\n    _result: JSON;\n    _params: JSON;\n\n    constructor(rpc) {\n        if (rpc.jsonrpc !== '2.0') {\n            throw 'Json-RPC Message Error';\n        }\n        this._id = rpc.id;\n        this._broadcast = false;\n        if (rpc.error) {\n            this._code = rpc.error.code;\n            this._message = rpc.error.message;\n        }\n        else if (rpc.method) {\n            this._params = rpc.params;\n            var t = rpc.method.split('.');\n            if (t.length == 2) {\n                this._namedAction = null;\n                this._namedMethod = t[t.length - 1];\n                if (t[0].split('}')[0] === '{broadcast') {\n                    this._broadcast = true;\n                    this._namedInstance = t[0].split('}')[1];\n                } else {\n                    this._namedInstance = t[0];\n                }\n            } else {\n                this._namedInstance = null;\n                this._namedMethod = null;\n                if (t[0].split('}')[0] === '{broadcast') {\n                    this._broadcast = true;\n                    this._namedAction = t[0].split('}')[1];\n                } else {\n                    this._namedAction = t[0];\n                }\n            }\n        }\n        else {\n            this._result = rpc.result;\n        }\n    }\n\n    isError(): boolean {\n        return (this._code !== undefined);\n    }\n\n    isRequest(): boolean {\n        return (this._namedMethod !== undefined || this._namedAction !== undefined);\n    }\n\n    isResponse(): boolean {\n        return (this._result !== undefined);\n    }\n\n    getCode(): number {\n        return this._code;\n    }\n\n    getErrorMessage(): string {\n        return this._message;\n    }\n\n    getResult(): JSON {\n        return this._result;\n    }\n\n    getParams(): JSON {\n        return this._params;\n    }\n\n    isBroadcast(): boolean {\n        return this._broadcast;\n    }\n\n    getMethod(): string {\n        return this._namedMethod;\n    }\n\n    getInstance(): string {\n        return this._namedInstance;\n    }\n\n    getAction(): string {\n        return this._namedAction;\n    }\n\n    getId(): string {\n        return this._id;\n    }\n}\n\nexport class ObjectRegistry implements api.IRPCRegistry {\n    private _objects: { [name: string]: Object } = {};\n    constructor() {}\n\n    register(name: string, className: any) {\n        this._objects[name] = new className();\n    }\n\n    invoke(name: string, method: string, params?: any): any {\n        try {\n            var instance = this._objects[name];\n            return instance[method](params);\n        } catch (err) {\n            var msg: string = 'ObjectRegistry invoke fail on ' + name + '.' + method;\n            msg += (params) ? '(' + JSON.stringify(params) + ')' : '()';\n            throw (msg);\n        }\n    }\n\n    get(name: string): any {\n        return this._objects[name];\n    }\n}\n\nexport class ClassRegistry implements api.IRPCRegistry {\n    private _classNames: { [name: string]: any } = {};\n    constructor() {}\n\n    register(name: string, className: any) {\n        this._classNames[name] = className;\n    }\n\n    invoke(name: string, method: string, params?: any): any {\n        try {\n            var instance = new this._classNames[name];\n            return instance[method](params);\n        } catch (err) {\n            var msg: string = 'ClassRegistry invoke fail on ' + name + '.' + method;\n            msg += (params) ? '(' + JSON.stringify(params) + ')' : '()';\n            throw (msg);\n        }\n    }\n\n    get(name: string): any {\n        return this._classNames[name];\n    }\n}\n\nexport class KeyRegistry implements api.IRPCRegistry {\n    private _key: string;\n    private _classRegistry: ClassRegistry;\n    private _objects: { [name: string]: Object } = {};\n    constructor(key: string, registry: ClassRegistry) {\n        this._key = key;\n        this._classRegistry = registry;\n    }\n\n    register(name: string, className: any) {\n        throw 'Register method should not be use on KeyRegistry';\n    }\n\n    invoke(name: string, method: string, params?: any): any {\n        try {\n            var instance = this._objects[this._key + ':' + name];\n            if (!instance) {\n                var className = this._classRegistry.get(name);\n                this._objects[this._key + ':' + name] = new className();\n                instance = this._objects[this._key + ':' + name];\n            }\n            return instance[method](params);\n        } catch (err) {\n            var msg: string = 'KeyRegistry ' + this._key + ' invoke fail on ' + name + '.' + method;\n            msg += (params) ? '(' + JSON.stringify(params) + ')' : '()';\n            throw (msg);\n        }\n    }\n\n    key() {\n        return this._key;\n    }\n\n    get(name: string): any {\n        return this._classRegistry.get(name);\n    }\n}\n\nexport class RPC {\n\n    public static VERSION: string = '2.0';\n    public static PARSE_ERROR: number = -32700;\n    public static INVALID_REQUEST: number = -32600;\n    public static METHOD_NOT_FOUND: number = -32601;\n    public static INVALID_PARAMS: number = -32602;\n    public static INTERNAL_ERROR: number = -32603;\n\n    public static Response(id:string, result?:JSON) {\n        return {\n            'jsonrpc': RPC.VERSION,\n            'result': (result) ? result : null,\n            'id': (id) ? id : null\n        }\n    }\n\n    public static Request(id:string, method:string, data?:JSON) {\n        return {\n            'jsonrpc': RPC.VERSION,\n            'method': method,\n            'params': data,\n            'id': (id) ? id : null\n        };\n    }\n\n    public static Error(id:string, code:number, message:string) {\n        return {\n            'jsonrpc': RPC.VERSION,\n            'error': {\n                'code': code,\n                'message' : message\n            },\n            'id': (id) ? id : null\n        };\n    }\n}\n\nexport class WSRpcContext {\n    ws:         WebSocket;\n    id:         string;\n    action:     string;\n    method:     string;\n    data:       JSON;\n    broadcast:  boolean;\n}\n\nexport class WSRpcLogging {\n    static log(...args: any[]) {\n        if (DEBUG) {\n            console.debug.apply(console, args);\n        }\n    }\n}\n\nexport class WSRpcInvoke implements api.IWSRpcInvoke {\n    private _context: WSRpcContext;\n    constructor(context: WSRpcContext) {\n        this._context = context;\n    }\n    method(method: string): api.IWSRpcMethod {\n        this._context.method = method;\n        return new WSRpcMethod(this._context);\n    }\n}\n\nexport class WSRpcMethod implements api.IWSRpcMethod {\n    private _context: WSRpcContext;\n    constructor(context: WSRpcContext) {\n        this._context = context;\n    }\n    withParams(params?: JSON): api.IWSRpcMethodRequest {\n        this._context.data = params;\n        return new WSRpcMethodRequest(this._context);\n    }\n}\n\nexport class WSRpcMethodRequest implements api.IWSRpcMethodRequest {\n    private _context: WSRpcContext;\n    constructor(context: WSRpcContext) {\n        this._context = context;\n    }\n    broadcast(): WSRpcMethodRequest {\n        this._context.broadcast = true;\n        return this;\n    }\n    now() {\n        var _rpc = RPC.Request(this._context.id, this._context.method, this._context.data);\n        if (this._context.ws) {\n            WSRpcLogging.log('WSRpc', 'now', this._context.ws.url, JSON.stringify(_rpc));\n            return this._context.ws.send(JSON.stringify(_rpc));\n        } else {\n            throw 'WS send error: connection may be closed';\n        }\n    }\n    then(...callbacks:((data: JSON) => void)[]) {\n        this._context.id =  this._context.method + ':' + UUIDGenerator.generateUUID();\n        if (callbacks && callbacks.length > 0) {\n            var eventBus: EventBus = EventBus.getSharedEventBus();\n            for (var x = 0; x < callbacks.length; x++) {\n                eventBus.on(this._context.id, callbacks[x]);\n            }\n        }\n        this.now();\n    }\n}\n\nexport class WSRpc implements api.IWSRpc {\n\n    private _ws: WebSocket;\n    private _url: string;\n    private _handler: WSRpcClientCallHandler;\n\n    private _onOpenCallback: (event: Event) => void;\n    private _onCloseCallback: (event: CloseEvent) => void;\n    private _onErrorCallback: (event: ErrorEvent) => void;\n    private _onConnectCallback: () => void;\n\n    constructor(url: string) {\n        this._url = url;\n        this._ws = null;\n        this._handler = new WSRpcClientCallHandler();\n    }\n\n    public connect() {\n        WSRpcLogging.log('WSRpc', 'connecting ...', this._url);\n        this._ws = new WebSocket(this._url, ['jsonrpc_2.0_over_websocket']);\n\n        if (this._onConnectCallback) {\n            setTimeout(this._onConnectCallback(), 0);\n        }\n\n        this._ws.onopen = (event: Event) => {\n            WSRpcLogging.log('WSRpc', 'onOpen', this._url);\n            if (this._onOpenCallback) {\n                setTimeout(this._onOpenCallback(event), 0);\n            }\n        };\n\n        this._ws.onclose = (event: CloseEvent) => {\n            WSRpcLogging.log('WSRpc', 'onclose', this._url);\n            if (this._onCloseCallback) {\n                setTimeout(this._onCloseCallback(event), 0);\n            }\n        };\n\n        this._ws.onmessage = (event: any) => {\n            WSRpcLogging.log('WSRpc', 'onmessage', this._url, event.data);\n            var rpc = JSON.parse(event.data);\n            var _rpcMessage: RpcMessage = new RpcMessage(rpc);\n            if (_rpcMessage.getId()) {\n                EventBus.getSharedEventBus().fire(rpc.id, (rpc.result) ? rpc.result : rpc.error);\n            }\n            if (_rpcMessage.isRequest()) {\n                this._handler.execute(this._ws, _rpcMessage);\n            }\n        };\n\n        this._ws.onerror = (event: ErrorEvent) => {\n            WSRpcLogging.log('WSRpc', 'onerror', this._url, event);\n            if (this._onErrorCallback) {\n                setTimeout(this._onErrorCallback(event), 0);\n            }\n        };\n    }\n\n    ready(): boolean {\n        return (this._ws != null);\n    }\n\n    close(): boolean {\n        if (this._ws) {\n            this._ws.close();\n            this._ws = null;\n            return true;\n        }\n        return false;\n    }\n\n    onOpen(callback:(event: Event) => void) {\n        this._onOpenCallback = callback;\n    }\n\n    onClose(callback:(event: CloseEvent) => void) {\n        this._onCloseCallback = callback;\n    }\n\n    onError(callback:(event: ErrorEvent) => void) {\n        this._onErrorCallback = callback;\n    }\n\n    onConnect(callback:() => void) {\n        this._onConnectCallback = callback;\n    }\n\n    call(about?: string): api.IWSRpcInvoke {\n        var wsCtx: WSRpcContext = new WSRpcContext();\n        wsCtx.ws = this._ws;\n        wsCtx.id = about;\n        return new WSRpcInvoke(wsCtx);\n    }\n\n    on(about: string, ...callbacks: ((data: JSON) => void)[]) {\n        WSRpcLogging.log('Setting callback for', '\"' + about + '\"');\n        if (callbacks && callbacks.length > 0) {\n            var eventBus: EventBus = EventBus.getSharedEventBus();\n            for (var x = 0; x < callbacks.length; x++) {\n                eventBus.on(about, callbacks[x]);\n            }\n        }\n    }\n\n    doRequest(action: string, data: JSON, ...callbacks: ((data: JSON) => void)[]) {\n        var _rpc = null;\n        if (callbacks && callbacks.length > 0) {\n            var _uuid: string =  action + ':' + UUIDGenerator.generateUUID();\n            var eventBus: EventBus = EventBus.getSharedEventBus();\n            for (var x = 0; x < callbacks.length; x++) {\n                eventBus.on(_uuid, callbacks[x]);\n            }\n            _rpc = RPC.Request(_uuid, action, data);\n        } else {\n            _rpc = RPC.Request(action, action, data);\n        }\n\n        if (this._ws) {\n            WSRpcLogging.log('WSRpc', 'send', this._ws.url, JSON.stringify(_rpc));\n            return this._ws.send(JSON.stringify(_rpc));\n        } else {\n            throw 'WS send error: connection may be closed';\n        }\n    }\n\n    onResponse(action: string, ...callbacks: ((data: JSON) => void)[]) {\n        if (callbacks && callbacks.length > 0) {\n            var eventBus: EventBus = EventBus.getSharedEventBus();\n            for (var x = 0; x < callbacks.length; x++) {\n                eventBus.on(action, callbacks[x]);\n            }\n        }\n    }\n\n    singleton(instanceName: string, classNames: any) {\n        this._handler.singleton(instanceName, classNames);\n    }\n\n    stateless(instanceName: string, classNames: any) {\n        this._handler.stateless(instanceName, classNames);\n    }\n}"],"sourceRoot":"/source/"}