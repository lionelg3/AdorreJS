{"version":3,"sources":["WSRpcBackend.ts"],"names":["WSRpcBackend","WSRpcBackend.constructor","WSRpcBackend.link","WSRpcBackend.singleton","WSRpcBackend.stateless","WSRpcBackend.statefull","WSRpcBackend._onClientMessage","WSRpcBackend.log"],"mappings":"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","file":"WSRpcBackend.js","sourcesContent":["/// <reference path=\"../typings/ws/ws.d.ts\" />\n/// <reference path=\"Registry.ts\" />\n/// <reference path=\"JsonRpc.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"BackendCallHandler.ts\" />\nimport ws = require('ws');\nimport reg = require('./Registry');\nimport jrpc = require('./JsonRpc');\nimport bus = require('./EventBus');\nimport handler = require('./BackendCallHandler');\n\nexport var DEBUG: boolean = false;\n\nexport module api {\n    export interface IWSRpcBackend {\n        link(server: ws.Server);\n        singleton(instanceName: string, classNames: any);\n        stateless(instanceName: string, classNames: any);\n        statefull(instanceName: string, classNames: any);\n    }\n}\n\nexport class WSRpcBackend implements api.IWSRpcBackend {\n\n    private _server: ws.Server;\n    private _handler: handler.BackendCallHandler;\n\n    constructor() {\n        this._handler = new handler.BackendCallHandler();\n    }\n\n    public link(server: ws.Server) {\n        this._server = server;\n        this._server.on('error', (err: Error) => {\n                WSRpcBackend.log('Server err ' + err);\n            }\n        );\n\n        this._server.on('headers', (headers: string[]) => {\n                WSRpcBackend.log('Server headers ');\n                headers.forEach(function (h) {\n                    WSRpcBackend.log(h)\n                });            }\n        );\n\n        this._server.on('connection', (client) => {\n                client.on('message', (data: any, flags: {binary: boolean}) => {\n                        this._onClientMessage(client, data, flags);\n                    }\n                );\n                client.on('error', (err: Error) => {\n                        WSRpcBackend.log('Client error ' + err);\n                    }\n                );\n                client.on('close', (code: number, message: string) => {\n                        WSRpcBackend.log('Client close code ' + code + \", message \" + message);\n                    }\n                );\n                client.on('ping', (data: any, flags: {binary: boolean}) => {\n                        WSRpcBackend.log('Ping ' + data);\n                    }\n                );\n                client.on('pong', (data: any, flags: {binary: boolean}) => {\n                        WSRpcBackend.log('Pong ' + data);\n                    }\n                );\n                client.on('open', () => {\n                        WSRpcBackend.log('Client open ' + client);\n                    }\n                );\n            }\n        );\n    }\n\n    public singleton(instanceName: string, classNames: any) {\n        this._handler.singleton(instanceName, classNames);\n    }\n\n    public stateless(instanceName: string, classNames: any) {\n        this._handler.stateless(instanceName, classNames);\n    }\n\n    public statefull(instanceName: string, classNames: any) {\n        this._handler.statefull(instanceName, classNames);\n    }\n\n    private _onClientMessage(client: any, data: any, flags: {binary: boolean}) {\n        WSRpcBackend.log('<<WSRpcBackend ' + data);\n        try {\n            var _rpc: jrpc.RPC = new jrpc.RPC(JSON.parse(data));\n            var _id = (_rpc.getId().split(':').length == 1) ? _rpc.getId() : _rpc.getId().split(':')[1];\n            if (_rpc.isRequest() && _rpc.isBroadcast()) {\n                WSRpcBackend.log('WSRpcBackend : broadcastExecute', _rpc.getId());\n                this._handler.broadcastExecute(\n                    this._server,\n\t\t\t\t\tclient,\n                    _rpc.getInstance(),\n                    _rpc.getMethod(),\n                    _rpc.getParams(),\n                    _rpc.getId()\n                );\n            }\n            else if (_rpc.isRequest()) {\n                WSRpcBackend.log('WSRpcBackend : execute', _rpc.getId());\n                this._handler.execute(\n                    client,\n                    _rpc.getInstance(),\n                    _rpc.getMethod(),\n                    _rpc.getParams(),\n                    _rpc.getId()\n                );\n            }\n            else if (_rpc.isResponse() && this._handler.getClientResponseWithId(_id)) {\n                WSRpcBackend.log('WSRpcBackend : sendResponseToOrigin', _rpc.getId());\n                var _client = this._handler.getClientResponseWithId(_id);\n                this._handler.sendResponseToOrigin(_client, _rpc.getId(), _rpc.getResult());\n            }\n            else if (_rpc.isResponse()) {\n                WSRpcBackend.log('WSRpcBackend : useResponse', _rpc.getId());\n                this._handler.useResponse(_rpc.getId(), _rpc.getResult());\n            }\n            else if (_rpc.isError() && this._handler.getClientResponseWithId(_id)) {\n                WSRpcBackend.log('WSRpcBackend : sendErrorToOrigin', _rpc.getId());\n                var _client = this._handler.getClientResponseWithId(_id);\n                this._handler.sendErrorToOrigin(_client, _rpc.getId(), _rpc.getCode(), _rpc.getErrorMessage());\n            }\n            else if (_rpc.isError()) {\n                WSRpcBackend.log('WSRpcBackend : receiveClientError', _rpc.getId());\n                this._handler.receiveClientError(_rpc);\n            }\n        } catch (err) {\n            console.warn(err);\n        }\n    }\n    \n    public static log(...args:any[]) {\n        if (DEBUG) {\n            console.log(args);\n        }\n    }\n}"],"sourceRoot":"/source/"}