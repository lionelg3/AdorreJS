{"version":3,"sources":["WSRpcFrontend.ts"],"names":["WSRpcFrontend","WSRpcFrontend.constructor","WSRpcFrontend.link","WSRpcFrontend.call","WSRpcFrontend.singleton","WSRpcFrontend.stateless","WSRpcFrontend.log","WSRpcFrontendCall","WSRpcFrontendCall.constructor","WSRpcFrontendCall.fire","WSRpcFrontendCall.broadcast"],"mappings":"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","file":"WSRpcFrontend.js","sourcesContent":["/// <reference path=\"UUIDGenerator.ts\" />\n/// <reference path=\"Registry.ts\" />\n/// <reference path=\"JsonRpc.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"FrontendCallHandler.ts\" />\nimport uuid = require('./UUIDGenerator');\nimport reg = require('./Registry');\nimport jrpc = require('./JsonRpc');\nimport evt = require('./EventBus');\nimport handler = require('./FrontendCallHandler');\n\nexport var DEBUG:boolean = false;\n\nexport module api {\n\texport interface IWSRpcFrontend {\n\t\tlink(ws:WebSocket);\n\t\tcall(name:string, method:string, then?:(data?:JSON) => void, otherwise?:(data:JSON) => void): IWSRpcCall;\n\t\tsingleton(instanceName:string, classNames:any);\n\t\tstateless(instanceName:string, classNames:any);\n\t}\n\n\texport interface IWSRpcCall {\n\t\tfire(data?:JSON);\n\t\tbroadcast(data?:JSON);\n\t}\n}\n\nexport class WSRpcFrontend implements api.IWSRpcFrontend {\n\n\tprivate _ws:WebSocket;\n\tprivate _handler:handler.api.IFrontendCallHandler;\n\n\tconstructor() {\n\t\tthis._ws = null;\n\t\tthis._handler = new handler.FrontendCallHandler();\n\t}\n\n\tpublic link(ws:WebSocket) {\n\t\tthis._ws = ws;\n\t\tif (this._ws) {\n\t\t\tthis._ws.onmessage = (event:any) => {\n\t\t\t\tWSRpcFrontend.log('WSRpcFrontend onmessage ' + event.data);\n\t\t\t\tvar rpc = JSON.parse(event.data);\n\t\t\t\tvar message:jrpc.RPC = new jrpc.RPC(rpc);\n\t\t\t\tif (message.isRequest()) {\n\t\t\t\t\tthis._handler.execute(this._ws, message.getInstance(), message.getMethod(), message.getParams(), message.getId());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tevt.EventBus.getSharedEventBus().fire(rpc.id, (rpc.result) ? rpc.result : rpc.error);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tthrow 'ERR WSRpcFrontend WRC_001: Can not link without WebSocket connection.';\n\t\t}\n\t}\n\n\tpublic call(name:string, method:string, then?:(data?:JSON) => void, otherwise?:(data:JSON) => void):api.IWSRpcCall {\n\t\tvar call:WSRpcFrontendCall = new WSRpcFrontendCall();\n\t\tcall.ws = this._ws;\n\t\tcall.clazz = name;\n\t\tcall.method = method;\n\t\tcall.id = name + '.' + method + '/' + uuid.UUIDGenerator.generateUUID();\n\n\t\tvar eventBus:evt.EventBus = evt.EventBus.getSharedEventBus();\n\t\tif (then) {\n\t\t\teventBus.on(call.id, then);\n\t\t}\n\t\tif (otherwise) {\n\t\t\teventBus.on('Error:' + call.id, otherwise);\n\t\t}\n\t\treturn call;\n\t}\n\n\tpublic singleton(instanceName:string, classNames:any) {\n\t\tthis._handler.singleton(instanceName, classNames);\n\t}\n\n\tpublic stateless(instanceName:string, classNames:any) {\n\t\tthis._handler.stateless(instanceName, classNames);\n\t}\n\n\tpublic static log(...args:any[]) {\n\t\tif (DEBUG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nclass WSRpcFrontendCall implements api.IWSRpcCall {\n\tws:WebSocket = null;\n\tid:string = null;\n\tclazz:string = null;\n\tmethod:string = null;\n\n\tpublic fire(data?:JSON) {\n\t\tvar _rpc = jrpc.RPC.Request(this.id, this.clazz + '.' + this.method, data);\n\t\tif (this.ws) {\n\t\t\tWSRpcFrontend.log('>>WSRpcFrontend ' + JSON.stringify(_rpc));\n\t\t\tthis.ws.send(JSON.stringify(_rpc));\n\t\t} else {\n\t\t\tthrow 'ERR WSRpcFrontend WRC_002: Can not send without WebSocket connection.';\n\t\t}\n\t}\n\n\tpublic broadcast(data?:JSON) {\n\t\tthis.clazz = '{broadcast}' + this.clazz;\n\t\tthis.fire(data);\n\t}\n}"],"sourceRoot":"/source/"}